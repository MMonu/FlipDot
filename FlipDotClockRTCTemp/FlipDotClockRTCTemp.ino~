#include <Wire.h>
#include <TimeLib.h>
#include <DS1307RTC.h>
#include "FlipDot.h"
//#include "6x8_vertikal_MSB_1.h"
//#include "8x14_vertikal_MSB_2.h"
#include "annax9x16.h"

#define LATCH 10
#define OE 9

FlipDot fd(LATCH, OE);
int fontWidth, fontHeight;

void initFlipDot(void)
{
  memset(fd.fdMtx, 0x00, sizeof(fd.fdMtx));
  fontWidth = FONT_WIDTH;
  fontHeight = FONT_HEIGHT;
  fd.Update();
}

void fdWrite(int character, int offset)
{
  const unsigned char *pFtL;
  const unsigned char *pFtH; 
  int col, ofs;
  
  ofs = character;
//  if (ofs >=32) ofs +=32; 
  
  pFtL = &annax9x16[(ofs - 0x20)*FONT_WIDTH];
  pFtH = &annax9x16[(ofs - 0x20)*FONT_WIDTH+FONT_WIDTH*32]; 
  col = offset * (fontWidth +1);
  for (int i = 0; i < FONT_WIDTH; i++, col++)
  {
    fd.fdMtx[1][col] = *pFtL++;
    fd.fdMtx[0][col] = *pFtH++;
  }
  col +=1;
}

void fdPrintDigit(int number, int offset)
{
  if (number >= 0 && number < 10)
  {
    fdWrite('0', offset);
    fdWrite(number + 0x30, offset + 1);
  }
  else
  {
    fdWrite((number / 10) + 0x30, offset);
    fdWrite((number % 10) + 0x30, offset + 1);
  }
}


void setup() {
  initFlipDot();
  delay(1000);
  fdWrite('R', 1);
  fdWrite('T', 2);
  fdWrite('C', 3);
  fd.Update();
  delay(1000);
//  Serial.begin(9600);
//  while (!Serial) ; // wait for serial
//  delay(200);
//  Serial.println("DS1307RTC Read Test");
//  Serial.println("-------------------");
  fdWrite('v', 1);
  fdWrite('1', 2);
  fdWrite('0', 3);
  fd.Update();
  delay(1000);
}

tmElements_t tm;
tmElements_t last_tm;

void loop() {

  if (RTC.read(tm)) {
//    Serial.print("Ok, Time = ");
    print2digits(tm.Hour);
    fdPrintDigit(tm.Hour, 0);
//    Serial.write(':');
    fdWrite(':', 2);
    print2digits(tm.Minute);
    fdPrintDigit(tm.Minute, 3);
//    Serial.write(':');
    print2digits(tm.Second);
//    Serial.print(", Date (D/M/Y) = ");
//    Serial.print(tm.Day);
//    Serial.write('/');
//    Serial.print(tm.Month);
//    Serial.write('/');
//    Serial.print(tmYearToCalendar(tm.Year));
//    Serial.println();
  } else {
    if (RTC.chipPresent()) {
//      Serial.println("The DS1307 is stopped.  Please run the SetTime");
//      Serial.println("example to initialize the time and begin running.");
//      Serial.println();
    } else {
//      Serial.println("DS1307 read error!  Please check the circuitry.");
//      Serial.println();
    }
    delay(9000);
  }
  if ((last_tm.Hour != tm.Hour) || (last_tm.Minute != tm.Minute))
  {
    fd.Update();
    last_tm.Hour = tm.Hour;
    last_tm.Minute = tm.Minute;
  }
  delay(1000);
}

void print2digits(int number) {
  if (number >= 0 && number < 10) {
    Serial.write('0');
  }
  Serial.print(number);
}


